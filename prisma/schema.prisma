generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model Banner {
  id         Int      @id @default(autoincrement())
  title      String   @unique
  image      String
  link       String
  status     String   @default("show")
  slug       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@index([status])
  @@map("banners")
}

model Coupon {
  id                Int               @id @default(autoincrement())
  name              String            @unique
  description       String?
  discount_percent  Float             @default(0)
  start_date        DateTime
  end_date          DateTime
  is_active         Boolean
  status            Int               @default(1)
  created_at        DateTime          @default(now())
  updated_at        DateTime          @updatedAt
  product_to_coupon ProductToCoupon[]

  @@index([name, start_date, end_date])
  @@map("coupons")
}

model ProductToCoupon {
  id              Int      @id @default(autoincrement())
  product         Product  @relation(fields: [product_id], references: [id])
  product_id      Int
  coupon          Coupon   @relation(fields: [coupon_id], references: [id])
  coupon_id       Int
  activation_date DateTime
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt

  @@map("product_to_coupon")
}

model User {
  id             Int             @id @default(autoincrement())
  email          String          @unique
  password       String?
  name           String?
  avatar         String?         @default("default.jpg")
  phone          String?
  cart           Cart?
  orders         Order[]
  history_search HistorySearch[]
  review         Review[]
  refresh_token  String?
  role           Role            @default(USER)
  is_active      Boolean         @default(false)
  created_at     DateTime        @default(now())
  updated_at     DateTime        @updatedAt

  @@index([email, is_active])
  @@map("users")
}

model Cart {
  id                Int           @id @default(autoincrement())
  user              User          @relation(fields: [user_id], references: [id])
  user_id           Int           @unique
  product           Product       @relation(fields: [product_id], references: [id])
  product_id        Int
  product_option    ProductOption @relation(fields: [product_option_id], references: [id])
  product_option_id Int
  quantity          Int           @default(1)
  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt

  @@index([user_id])
  @@map("carts")
}

model Product {
  id                Int                  @id @default(autoincrement())
  name              String
  descriptions      ProductDescription[]
  brand             Brand                @relation(fields: [brand_id], references: [id])
  brand_id          Int
  category          Category             @relation(fields: [category_id], references: [id])
  category_id       Int
  price             Float
  promotions        Json
  warranties        Json
  label             String
  product_options   ProductOption[]
  orderDetail       OrderDetail[]
  reviews           Review[]
  cart              Cart[]
  product_to_coupon ProductToCoupon[]
  created_at        DateTime             @default(now())
  updated_at        DateTime             @updatedAt

  @@map("products")
}

model ProductOption {
  id             Int            @id @default(autoincrement())
  product        Product        @relation(fields: [product_id], references: [id])
  product_id     Int
  thumbnail      String
  product_images ProductImage[]
  label_image    String
  price_modifier Float          @default(0)
  stock          Int            @default(0)
  SKU            String
  discount       Float          @default(0)
  is_sale        Boolean        @default(false)
  is_deleted     Boolean        @default(false)
  slug           String
  options        Options[]
  reviews        Review[]
  orderDetail    OrderDetail[]
  cart           Cart[]
  created_at     DateTime       @default(now())
  updated_at     DateTime       @updatedAt

  @@index([slug, is_sale, is_deleted])
  @@map("product_option")
}

model Options {
  id                Int           @id @default(autoincrement())
  product_option    ProductOption @relation(fields: [product_option_id], references: [id])
  product_option_id Int
  name              String
  value             String
  additional_cost   Float         @default(0)

  @@index([name, value])
  @@map("options")
}

model ProductDescription {
  id         Int      @id @default(autoincrement())
  product    Product  @relation(fields: [product_id], references: [id])
  product_id Int
  content    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@index([product_id])
  @@map("product_descriptions")
}

model ProductImage {
  id                Int           @id @default(autoincrement())
  ProductOption     ProductOption @relation(fields: [product_option_id], references: [id])
  product_option_id Int
  image_url         String
  image_alt_text    String?
  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt

  @@map("product_images")
}

model Brand {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  logo_url    String
  products    Product[]
  is_deleted  Boolean   @default(false)
  slug        String
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt

  @@index([slug, is_deleted])
  @@map("brands")
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  products    Product[]
  is_deleted  Boolean   @default(false)
  slug        String
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt

  @@index([slug, is_deleted])
  @@map("categories")
}

model Order {
  id            Int           @id @default(autoincrement())
  User          User          @relation(fields: [user_id], references: [id])
  user_id       Int
  name          String
  phone_number  String
  delivery      Delivery?
  order_date    DateTime?
  total_amount  Float         @default(0)
  payment_id    Payment?
  order_details OrderDetail[]
  address       String
  status        Int           @default(0)
  created_at    DateTime      @default(now())
  updated_at    DateTime      @updatedAt

  @@index([status])
  @@map("orders")
}

model OrderDetail {
  id                Int           @id @default(autoincrement())
  order             Order         @relation(fields: [order_id], references: [id])
  order_id          Int           @unique
  product           Product       @relation(fields: [product_id], references: [id])
  product_id        Int           @unique
  productOption     ProductOption @relation(fields: [product_option_id], references: [id])
  product_option_id Int           @unique
  quantity          Int           @default(1)
  price             Float
  subtotal          Float
  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt

  @@map("order_details")
}

model Payment {
  id             Int      @id @default(autoincrement())
  order          Order    @relation(fields: [order_id], references: [id])
  order_id       Int      @unique
  amount         Float
  payment_method String
  transaction_id String?
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  @@map("payments")
}

model Delivery {
  id              Int      @id @default(autoincrement())
  order           Order    @relation(fields: [order_id], references: [id])
  order_id        Int      @unique
  estimate_date   String
  tracking_number String
  status          Int      @default(0)
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt

  @@index([status])
  @@map("delivery")
}

model HistorySearch {
  id             Int      @id @default(autoincrement())
  user           User     @relation(fields: [user_id], references: [id])
  user_id        Int
  search_content String
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  @@map("history_search")
}

model Review {
  id                Int           @id @default(autoincrement())
  user              User          @relation(fields: [user_id], references: [id])
  user_id           Int
  product           Product       @relation(fields: [product_id], references: [id])
  product_id        Int
  productOption     ProductOption @relation(fields: [product_option_id], references: [id])
  product_option_id Int
  star              Float         @default(5)
  comment           String
  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt

  @@index([star])
  @@map("reviews")
}
