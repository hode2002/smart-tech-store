generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model Banner {
  id         Int      @id @default(autoincrement())
  title      String   @unique
  image      String
  link       String
  status     String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@index([status])
  @@map("banners")
}

model Coupon {
  id               Int      @id @default(autoincrement())
  name             String   @unique
  description      String?
  discount_percent Float    @default(0)
  start_date       DateTime
  end_date         DateTime
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt

  @@index([name, start_date, end_date])
  @@map("coupons")
}

model User {
  id             Int             @id @default(autoincrement())
  email          String          @unique
  password       String?
  name           String?
  avatar         String?         @default("https://t3.ftcdn.net/jpg/03/64/62/36/360_F_364623623_ERzQYfO4HHHyawYkJ16tREsizLyvcaeg.jpg")
  phone          String?
  cart           Cart?
  orders         Order[]
  history_search HistorySearch[]
  review         Review[]
  refresh_token  String?
  role           Role            @default(USER)
  is_active      Boolean         @default(false)
  created_at     DateTime        @default(now())
  updated_at     DateTime        @updatedAt

  @@index([email, is_active])
  @@map("users")
}

model Cart {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [user_id], references: [id])
  user_id    Int      @unique
  product    Product? @relation(fields: [product_id], references: [id])
  product_id Int?
  quantity   Int      @default(1)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@index([user_id])
  @@map("carts")
}

model Product {
  id              Int             @id @default(autoincrement())
  name            String
  description     String
  thumbnail       String
  brand           Brand           @relation(fields: [brand_id], references: [id])
  brand_id        Int
  category        Category        @relation(fields: [category_id], references: [id])
  category_id     Int
  price           Float
  stock           Int             @default(0)
  discount        Float           @default(0)
  release_date    DateTime        @default(now())
  product_images  ProductImage[]
  product_options ProductOption[]
  orderDetail     OrderDetail?
  review          Review[]
  Cart            Cart[]
  is_sale         Boolean         @default(false)
  is_delete       Boolean         @default(false)
  slug            String
  created_at      DateTime        @default(now())
  updated_at      DateTime        @updatedAt

  @@index([slug, is_sale, stock, discount, is_delete])
  @@map("products")
}

model ProductImage {
  id             Int      @id @default(autoincrement())
  product        Product  @relation(fields: [product_id], references: [id])
  product_id     Int
  image_url      String
  image_alt_text String?
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  @@index([product_id])
  @@map("product_images")
}

model ProductOption {
  id         Int      @id @default(autoincrement())
  product    Product  @relation(fields: [product_id], references: [id])
  product_id Int
  name       String
  value      String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@index([name, value])
  @@map("product_option")
}

model Brand {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  logo_url    String
  products    Product[]
  is_delete   Boolean   @default(false)
  slug        String
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt

  @@index([slug, is_delete])
  @@map("brands")
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  products    Product[]
  is_delete   Boolean   @default(false)
  slug        String
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt

  @@index([slug, is_delete])
  @@map("categories")
}

model Order {
  id            Int           @id @default(autoincrement())
  User          User          @relation(fields: [user_id], references: [id])
  user_id       Int
  delivery      Delivery?
  order_date    DateTime?
  total_amount  Float         @default(0)
  payment_id    Payment?
  order_details OrderDetail[]
  address       String
  phone         String
  status        Int           @default(0)
  created_at    DateTime      @default(now())
  updated_at    DateTime      @updatedAt

  @@index([status])
  @@map("orders")
}

model OrderDetail {
  id         Int      @id @default(autoincrement())
  order      Order    @relation(fields: [order_id], references: [id])
  order_id   Int      @unique
  product    Product  @relation(fields: [product_id], references: [id])
  product_id Int      @unique
  quantity   Int      @default(1)
  price      Float
  subtotal   Float
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("order_details")
}

model Payment {
  id             Int      @id @default(autoincrement())
  order          Order    @relation(fields: [order_id], references: [id])
  order_id       Int      @unique
  amount         Float
  payment_method String
  transaction_id String?
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  @@map("payments")
}

model Delivery {
  id              Int      @id @default(autoincrement())
  order           Order    @relation(fields: [order_id], references: [id])
  order_id        Int      @unique
  estimate_date   String
  tracking_number String
  status          Int      @default(0)
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt

  @@index([status])
  @@map("delivery")
}

model HistorySearch {
  id             Int      @id @default(autoincrement())
  user           User     @relation(fields: [user_id], references: [id])
  user_id        Int
  search_content String
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  @@map("history_search")
}

model Review {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [user_id], references: [id])
  user_id    Int
  product    Product  @relation(fields: [product_id], references: [id])
  product_id Int
  star       Float    @default(5)
  comment    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@index([star])
  @@map("reviews")
}
