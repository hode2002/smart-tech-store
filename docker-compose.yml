services:
    api:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: api
        ports:
            - '3001:3001'
        restart: unless-stopped
        depends_on:
            - mongodb
            - redis
            - mysql
        env_file:
            - .env
        networks:
            - app-network
    nginx:
        image: nginx:latest
        container_name: nginx
        restart: unless-stopped
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./nginx:/etc/nginx/conf.d
            - /etc/letsencrypt/live/${DOMAIN}:/etc/letsencrypt/live/${DOMAIN}
            - /etc/letsencrypt/archive/${DOMAIN}:/etc/letsencrypt/archive/${DOMAIN}
        depends_on:
        - api
        networks:
        - app-network

    mysql:
        image: mysql:8.0
        container_name: mysql
        ports:
            - '3306:3306'
        restart: unless-stopped
        env_file:
            - .env
        volumes:
            - mysql_data:/var/lib/mysql
            - ./init.sql:/docker-entrypoint-initdb.d/init.sql
        networks:
            - app-network

    mongodb:
        image: mongo:6.0
        container_name: mongodb
        restart: unless-stopped
        ports:
        - "27017:27017"
        env_file:
        - .env
        volumes:
        - mongo_data:/data/db
        networks:
        - app-network

    redis:
        image: redis:alpine
        container_name: redis
        restart: unless-stopped
        ports:
        - "6379:6379"
        env_file:
        - .env
        volumes:
        - redis_data:/data
        networks:
        - app-network

networks:
    app-network:

volumes:
    mysql_data:
    mongo_data:
    redis_data:
